<?xml version="1.0" encoding="utf-8"?>

<!-- ==================================================== -->
<!-- Build file for obs-java-sdk-->
<!-- ==================================================== -->

<project name="esdk_obs_native_java" default="service" basedir=".">
	<property name="src.dir" value="./com/huawei/obs" />
	<property name="src.jets3t.dir" value="../../../open_src/jets3t/src/org/jets3t/service" />
	<property name="lib.jets3t.dir" value="../../../open_src/jets3t/libs/java-xmlbuilder" />
	<property name="lib.common.dir" value="../../../open_src" />
	<property name="lib.dir" value="../lib" />
	<property name="jar.dir" value="${lib.dir}/jar" />
	<property name="appName" value="obs-java-sdk" />
	<property name="classes.root.dir" value="../bin" />
	<property name="classes.src.dir" value="../bin" />
	<property name="classes.jets3t.dir" value="../../../../../../../component/jets3t/jets3t-0.9/bin" />
	<property name="target.dir" value="../target" />
	<property name="target.lib.dir" value="../target/lib" />
	<property name="jets3tshell.name" value="build_jets3t.sh" />
	<property name="obs-version" value="1.0" />


	<!-- Compilation Classpath 路径设置     -->
	<path id="compile.classpath">
		<pathelement location="${classes.src.dir}" />
		<fileset dir="${lib.dir}" includes="*.jar" />
		<fileset dir="${lib.common.dir}">
			<include name="log4j-1.2.16.jar" />
			<include name="commons-logging-1.1.1.jar" />
			<include name="java-xmlbuilder-0.4.jar" />
			<include name="jdom-1.1.jar" />
			<include name="commons-codec-1.9.jar" />
			<include name="httpclient-4.2.3.jar" />
			<include name="httpcore-4.2.2.jar" />
		</fileset>
		<fileset dir="${lib.jets3t.dir}">
			<include name="java-xmlbuilder-0.4.jar" />
		</fileset>
	</path>
	
	<!-- Clean Target 删除先前的目录结构    -->
	<target name="clean" description="Delete old build and war directories">
		<!--delete dir="${classes.src.dir}" -->
		<delete dir="${classes.root.dir}" />

		<delete dir="${jar.dir}" />

		<delete dir="${target.dir}" />

		<echo>${appName} clean is complete!</echo>
	</target>

	<!-- Prepare Target 建立打包的目的目录结构     -->
	<target name="prepare" depends="clean" description="Prepare the working folders">
		
		<mkdir dir="${classes.src.dir}" />

		<mkdir dir="${jar.dir}" />

		<mkdir dir="${target.dir}" />
		
		<mkdir dir="${target.lib.dir}" />
		
		<mkdir dir="${classes.jets3t.dir}" />
		
		<echo>${appName} prepare is complete!</echo>
	</target>

	<!-- Compile Target 编译代码，在这之前先由prepare建立目录结构 encoding="utf-8" 处理乱码    -->
	<target name="compile" depends="prepare" description="Compile java sources">
		
		<javac srcdir="${src.jets3t.dir}" destdir="${classes.jets3t.dir}" encoding="utf-8" debug="true" includeantruntime="true">
			<classpath refid="compile.classpath" />
		</javac>
		
		<jar destfile="${lib.dir}/jets3t-0.9.0.jar" encoding="utf-8" compress="true">
			<fileset dir="${classes.jets3t.dir}" />
		</jar>
		<!-- Compile java class as necessary -->
		<javac srcdir="${src.dir}" destdir="${classes.src.dir}" encoding="utf-8" debug="true" includeantruntime="true">
			<classpath refid="compile.classpath" />
		</javac>

		<echo>${appName} compile is complete!</echo>
	</target>

	<target name="jar" depends="compile" description="Jar java sources">
		<!-- Jar java class as necessary -->
		<jar destfile="${jar.dir}/esdk_obs_native_java_${obs-version}.jar" encoding="utf-8" compress="true">
			<fileset dir="${classes.src.dir}" />
		</jar>

		<echo>${appName} jar is complete!</echo>
	</target>

	<target name="service" depends="jar" description="Target">
		<copy todir="${target.lib.dir}">
			<fileset dir="${lib.dir}">
				<include name="log4j-1.2.16.jar" />
				<include name="commons-logging-1.1.1.jar" />
				<include name="java-xmlbuilder-0.4.jar" />
				<include name="jdom-1.1.jar" />
				<include name="commons-codec-1.9.jar" />
				<include name="httpclient-4.2.3.jar" />
				<include name="httpcore-4.2.2.jar" />
				<include name="jets3t-0.9.0.jar" />
			</fileset>
			<fileset dir="${lib.jets3t.dir}">
				<include name="java-xmlbuilder-0.4.jar" />
			</fileset>
			<fileset dir="${jar.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<echo>${appName} jars copy to ${target.lib.dir} is complete!</echo>
	</target>
</project>

